# extract - archive extractor
# usage: ex <file>
extract() {
    if [ -f $1 ]; then
        case $1 in
        *.tar.bz2) tar xjf $1 ;;
        *.tar.gz) tar xzf $1 ;;
        *.bz2) bunzip2 $1 ;;
        *.rar) unrar x $1 ;;
        *.gz) gunzip $1 ;;
        *.tar) tar xf $1 ;;
        *.tbz2) tar xjf $1 ;;
        *.tgz) tar xzf $1 ;;
        *.zip) unzip $1 ;;
        *.Z) uncompress $1 ;;
        *.7z) 7z x $1 ;;
        *) echo "'$1' cannot be extracted via ex()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# colors - lists terminal color codes
colors() {
    local fgc bgc vals seq0

    printf "Color escapes are %s\n" '\e[${value};...;${value}m'
    printf "Values 30..37 are \e[33mforeground colors\e[m\n"
    printf "Values 40..47 are \e[43mbackground colors\e[m\n"
    printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

    # foreground colors
    for fgc in {30..37}; do
        # background colors
        for bgc in {40..47}; do
            fgc=${fgc#37} # white
            bgc=${bgc#40} # black

            vals="${fgc:+$fgc;}${bgc}"
            vals=${vals%%;}

            seq0="${vals:+\e[${vals}m}"
            printf "  %-9s" "${seq0:-(default)}"
            printf " ${seq0}TEXT\e[m"
            printf " \e[${vals:+${vals+$vals;}}1mBOLD\e[m"
        done
        echo
        echo
    done
}

function log() {
    echo -e "\e[96m[$(date +%T.%3N)]\e[0m $1"
}

function banner() {
    echo -e "\n\e[1m############################################################"
    printf "####  %-48s  ####\n" "$@"
    echo -e "############################################################\e[0m\n"
}

# synergy - starts Synergy - mouse & keyboard sharing software
# usage:
# 	 synergy server
# 	 synergy client <server-address>
# 	 synergy kill <server|client|all>
synergy() {
    case "$1" in
    server)
        if ! pgrep -x synergys >/dev/null; then
            /usr/bin/synergys
        fi
        ;;
    client)
        if ! pgrep -x synergyc >/dev/null; then
            if [ -z "$2" ]; then
                echo "Usage: synergy client <server-address>"
            else
                /usr/bin/synergyc $2
            fi
        fi
        ;;
    kill)
        if [ -z "$2" ]; then
            echo "Usage: synergy kill <server|client|all>"
        else
            case "$2" in
            server) pkill synergys ;;
            client) pkill synergyc ;;
            all) pkill synergy ;;
            esac
        fi
        ;;
    *) echo "Usage: synergy [server|client|kill]" ;;
    esac
}

# calc - calculator
# usage: calc <math-expression>
calc() {
    echo "scale=3;$@" | bc -l
}

testScript() {
    SCRIPT_PATH=/tmp/test.sh
    touch $SCRIPT_PATH
    sudo chmod 755 +x $SCRIPT_PATH
    nano $SCRIPT_PATH
    $SCRIPT_PATH
}

# Prepends string with timestamp and prints it out
# $1 - String to timestamp
function timestamp() {
    echo -e "${C_CYAN}[$(date +%T.%3N)]${C_RESET} $1"
}

# Prints timestamped message and highlights parts surrounded in "<_color_>"
# $1 - String to log
# $2 - Highlight color
function log() {
    timestamp "$(sed "s/<_/\\$2/g" <<<"$1" | sed "s/_>/\\${C_RESET}/g")"
}

# Prints visible divider with attached string
# $1 - Banner Message
function banner() {
    echo -e "${C_BOLD}"
    echo -e "############################################################"
    printf "####  %-48s  ####\n" "$@"
    echo -e "############################################################"
    echo -e "${C_RESET}"
}

export -f timestamp log banner
